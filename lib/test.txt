
To-Do
 1. Fractions
+2. Tests
 3. expression as unit's val
+4. Revisar reduce y pasar a map
+5. mk :m recurse down primero
 6. Going multiprocess
 7. Functions! Derivate! Integrate!

import Exun
import Exun.Eq
import Exun.Pattern
import Exun.UI
import Exun.Simpl
aexp = {{:m, :mult}, list} = Exun.parse_text "2*x"
aast = Exun.parse_text("u*v'x")
[{:ok,m1},{:ok,m2}]=Exun.Pattern.match_ast(aast, aexp)
x="x"
uvvdu = Exun.parse_text("u*v-$v*u'#{x},#{x}")
Exun.Simpl.mkrec(Exun.replace uvvdu,m1)

